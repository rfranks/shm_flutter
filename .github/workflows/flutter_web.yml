# This is a basic workflow to help you get started with Actions

name: FlutterWeb

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v1
      name: Checkout Code
    - uses: subosito/flutter-action@v1
      name: Setup Flutter
      with:
        channel: beta
    - run: which flutter
      name: Which Flutter
    - run: flutter config --enable-web
      name: Enable Web Config
    - run: flutter pub get
      name: Get Packages
    - run: flutter format --dry-run --set-exit-if-changed .
      name: Format Flutter
    - run: flutter analyze
      name: Analyze Flutter
    - run: flutter test
      name: Run Flutter Tests
    - run: flutter build web
      name: Build Flutter for Web
    - uses: actions/upload-artifact@v2
      name: Upload Web production artifacts
      with:
        name: web
        path: build/web
    - run: flutter pub global activate dartdoc
      name: Activate DartDoc
    # run: dartdoc --sdk-dir=/opt/hostedtoolcache/flutter/1.22.0-12.1.pre-beta/
    #  name: Running DartDoc
    - name: Deploy
      run: |
        cd build/web
        git init
        git config user.name  "CI"
        git config user.email "flutter-ci@github.com"
        git remote add secure-origin https://${{ secrets.ACCESS_TOKEN }}@github.com/rfranks/shm_flutter.git
        git checkout -b gh-pages
        git add .
        git commit -m "Updated docs"
        git push --force secure-origin gh-pages
  
